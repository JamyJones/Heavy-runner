name: RUN STUDY WINDOW

on:
  workflow_dispatch:

jobs:
  Get-info-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout private tools
        uses: actions/checkout@v4
        with:
          repository: john4650-hub/Hello-Android-CI
          token: ${{ secrets.TK }}
      - name: install deps
        run: |
          pip install yt-dlp
          pip install bs4

      - name: Get info.json
        run: |
          touch info.json
          trap 'catch $? $LINENO' EXIT
          catch() {
              if [ "$1" -ne 0 ]; then
                chmod +x dispatch_actions_studyWindow.sh
                ./dispatch_actions_studyWindow.sh "$GITHUB_RUN_ID"
                exit 0
              fi
          }
          for page in $(seq 1 1);do
            echo "$page" | bash scripts/otherScripts/yewtube/getPage.sh > "index$page.html"
          done
          python scripts/otherScripts/yewtube/scrap.py
          python scripts/pyScripts/extractVideoInfo.py
        env:
          GITHUB_TOKEN: ${{ secrets.TK }}
      - name: Upload modifications
        uses: actions/upload-artifact@v4
        with:
          name: json_files
          path: |
            ./info.json
            ./assets/db/data.json
          retention-days: 1
  generate-matrix:
    needs: Get-info-json
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: Move files to root and generate Matrix
        id: generate
        run: |
          cp -r json_files/* .
          streams_count=$(jq 'keys | length' assets/db/data.json)
          streams_count=$(( streams_count / 4 + 1))
          MATRIX=$(seq 0 $streams_count | jq -c '[inputs]')
          echo "::set-output name=matrix::$MATRIX"

  proccess-json-data:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk_id: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: john4650-hub/Hello-Android-CI
          token: ${{ secrets.TK }}

      - name: install ffmpeg
        uses: animMouse/setup-ffmpeg@v1

      - name: install deps
        run: |
          pip install yt-dlp
          cargo install gifski

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: PROCESS THE REST OF THE FILES
        run: |
          ls 
          cp -r json_files/* .
          for n in $( seq 1 100 ); do
            touch "run_ffmpeg${n}.sh"
            echo "#!/bin/bash" > "run_ffmpeg${n}.sh"
            chmod +x "run_ffmpeg${n}.sh"
          done
          python scripts/pyScripts/ytStudy.py
          ./run_ffmpeg${{ matrix.chunk_id }}.sh || true

      - name: upload matrix generated gif
        uses: actions/upload-artifact@v4
        with:
          name: gif-${{ matrix.chunk_id }}
          path: ./*.gif
          retention-days: 1

  Upload_the_gifs_and_json_files:
    needs: proccess-json-data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: john4650-hub/Hello-Android-CI
          token: ${{ secrets.TK }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: delete move and recreate repo
        run: |
          gh repo delete JamyJones/Pastebin --yes
          mkdir -p Pastebin/assets
          #cp -r json_files/* .
          #for dir in gif-*/; do
          #  cp -r "$dir"* Pastebin/assets/
          #done 
          cd Pastebin
          echo "logs.tx">logs.txt
          echo "logs.tx">paste.md
          git config --global init.defaultBranch main
          git init
          git config --global user.email "jamesjamy51@gmail.com"
          git config --global user.name "JamyJones"
          git config --global --add safe.directory  /home/runner/work/Heavy-runner/Heavy-runner/Pastebin
          git add .
          git commit -m "Refreshed the repo" 
          gh repo create JamyJones/Pastebin --public
          REPO="JamyJones/Pastebino"  # Replace with your repository, e.g., "octocat/Hello-World"
          is_repo_present(){
            while true;do
            if [[ $1 -eq 0 ]];then
              echo "Repository $REPO exists. Exiting loop."
              break
            else
              sleep 3
              trap 'is_repo_present $? $LINENO' EXIT
              gh repo view "$REPO"
            fi
            done
          }
          trap 'is_repo_present $? $LINENO' EXIT
          gh repo view "$REPO"
        env:
          GITHUB_TOKEN: ${{ secrets.TK_JAMY }}
        shell: bash
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TK }}
          branch: main
          repository: JamyJones/Pastebin
          directory: Pastebin
      - name: Move files to root and update
        run: |
          last_run=9
          trap 'catch $? $LINENO' EXIT
          catch() {
              if [ "$1" -ne 0 ]; then
                chmod +x dispatch_actions_studyWindow.sh
                ./dispatch_actions_studyWindow.sh $GITHUB_RUN_ID $last_run
                exit 0
              fi
          }
          pip install supabase
          python scripts/otherScripts/yewtube/getImgRawUrl.py
          python scripts/otherScripts/yewtube/updateFiles.py
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.TK }}
        shell: bash

